#!/usr/bin/env bash

# Based on git-extras (https://github.com/tj/git-extras)
# Documentation for `git changelog`:
#   https://github.com/tj/git-extras/wiki/Commands#git-changelog
#
# USAGE: git-changelog [-l,--list,-t,--tag] <FILE>

FILE=""
LIST=false
TAG="0.?.?"

# Parse params
while [ "$1" != "" ]; do
  case $1 in
    -l | --list )
      LIST=true
      ;;
    -t | --tag )
      TAG=$2
      shift
      ;;
    * )
      FILE=$1
      ;;
  esac
  shift
done

# Get current date
DATE=`date +'%Y-%m-%d'`
# Prepare heading
HEAD="\n### $DATE v$TAG\n\n"

# Generate list of changes
if $LIST; then
  version=$(git describe --tags --abbrev=0 $(git rev-list --tags --max-count=1 2>&1))
  if test -z "$version"; then
    git log --pretty="format:* %s"
  else
    git log --pretty="format:* %s" $version..
  fi
  exit
fi

# Prepare $FILE
CHANGELOG=$FILE
if test "$CHANGELOG" = ""; then
  CHANGELOG=`ls | egrep 'change|history' -i`
  if test "$CHANGELOG" = ""; then
    CHANGELOG='CHANGELOG.md';
  fi
fi

# Write changes into FILE
tmp="/tmp/changelog"
printf "$HEAD" > $tmp
git-changelog --list >> $tmp
printf '\n\n' >> $tmp
if [ -f $CHANGELOG ]; then cat $CHANGELOG >> $tmp; fi
mv $tmp $CHANGELOG

# Open CHANGELOG in Visual Studio Code
code $CHANGELOG